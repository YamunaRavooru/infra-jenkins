pipeline {
    agent {label 'AGENT-1'} 
    environment{
        PROJECT='expense'
        COMPONENT='backend'
        DEPLOY_TO='production'
    }
    options{
        disableConcurrentBuilds()
        timeout(time:30,unit:'MINUTES') 
        ansiColor('xtrem')
    }
     parameters{
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Pick something')
    }
    
    stages{
        stage("init"){
            steps{
                script{
                    withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh """
                    cd 30-rds
                     terraform init -reconfigure
                     terraform plan 

                    """
                     }
                    }
                }

            } 
             stage("Apply"){
            //   input 
            //    {
            //     message "Should we continue?"
            //     ok "Yes, we should."
            // }
            steps{
                script{
                    withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh """
                    cd 30-rds
                    terraform apply -auto-approve
                    """
                     }
                    }
                }

            } 
            stage('Destroy Infra') {
            when { 
                expression { params.ACTION == 'destroy'}
            }
            steps {
               script{
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    def list = ["30-rds", "20-bastion", "10-sg", "00-vpc"]
                    for(item in list){
                        sh """
                            cd $item
                            terraform init -reconfigure
                            terraform destroy -auto-approve
                        """
                    }
                }
                 
               }
            }
        }
        }
    post { 
    always { 
        echo 'I will always say Hello again!'
        deleteDir()
        }
    failure { 
        echo 'I will run when pipeline is failed'
        }
    success { 
        echo 'I will run when pipeline is success'
            }
    }
}